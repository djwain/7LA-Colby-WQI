junk2[16]
str_detect(junk2[20,16],"Chlorophyll"
str_detect(junk2[20,16],"Chlorophyll")
debugSource('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
str_detect(junk2[20,16],"Chlorophyll")
junk[20,16]
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
View(junk)
debugSource('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
debugSource('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
View(junk)
lake <- 'East Pond'
site <- 'EPDEP1'
year <- '2020'
basefile <- paste(site,year,sep="_")
# Load data
folder <- paste("~/Documents/Research/7LA-Colby/Belgrade Lakes/Lakes/",lake,sep="","/RawData/InSitu/")
datapath <- paste(folder,year,sep = "","/")
filenames <- dir(datapath, pattern=paste(basefile,'-',sep = ""))
outfile <-""
outfilename <- paste(datapath,paste(basefile,"_InSitu.csv",sep = ""),sep = "")
datapath2 <- paste(folder,"All/",sep= "")
outfilename2 <- paste(datapath2,paste(basefile,"_InSitu.csv",sep = ""),sep = "")
i = 1
fullpath <- paste(datapath,filenames[i],sep = "")
junk <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
View(junk)
dat <- read.csv(fullpath, skip = skipno, header = FALSE, stringsAsFactors = FALSE)
skipno <- which(junk == "Created")
dat <- read.csv(fullpath, skip = skipno, header = FALSE, stringsAsFactors = FALSE)
View(dat)
i = 11
junk <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
skipno = 19
junk2 <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
View(junk2)
fullpath <- paste(datapath,filenames[i],sep = "")
junk <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
skipno = 19
junk2 <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
dat <- read.csv(fullpath, skip = skipno, header = FALSE, stringsAsFactors = FALSE)
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
dat <- read.csv(fullpath, skip = skipno, header = FALSE, stringsAsFactors = FALSE)
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
# Trim data so only downcast is used
maxdepi <-which.max(dat$Depth..m.)
dat <- dat[1:maxdepi,]
View(dat)
dat1 <-select(dat,'YearDay','Temp..C.')
View(dat)
View(dat1)
dat1 <-select(dat,'YearDay','Depth..m.','Temp..C.','RDO..mg.L.')
colnames(dat1) <- c("YearDay",'z_m","T_C","DO_ppm")
colnames(dat1) <- c("YearDay","z_m","T_C","DO_ppm")
colnames(dat1) <- c("YearDay","z_m","T_C","DO_ppm")
i = 11
fullpath <- paste(datapath,filenames[i],sep = "")
skipno = 19
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
# Trim data so only downcast is used
maxdepi <-which.max(dat$Depth..m...749971.)
# Trim data so only downcast is used
maxdepi <-which.max(dat$Depth..m...749976.)
dat <- dat[1:maxdepi,]
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
# Rename columns with data I need so that it doesn't matter what instrument is being used
test <-df[ , grepl( "Depth" , names( df ) ) ]
# Rename columns with data I need so that it doesn't matter what instrument is being used
grepl( "Depth" , names( dat ) ) ]
# Rename columns with data I need so that it doesn't matter what instrument is being used
grepl( "Depth" , names( dat ) )
# Rename columns with data I need so that it doesn't matter what instrument is being used
z_m <- grepl( "Depth" , names( dat ) )
# Rename columns with data I need so that it doesn't matter what instrument is being used
z_m <- dat[,grepl( "Depth" , names( dat ) ) ]
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
T_C <-  dat[,grepl( "Temp" , names( dat ) ) ]
i = 11
skipno = 19
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
fullpath <- paste(datapath,filenames[i],sep = "")
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
T_C <- T_C[,1]
i = 11
fullpath <- paste(datapath,filenames[i],sep = "")
skipno = 19
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
View(dat)
dat1 <- cbind(dt$YearDay,z_m,T_C,DO_ppm)
dat1 <- cbind(dat$YearDay,z_m,T_C,DO_ppm)
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
View(outfile)
i = 1
fullpath <- paste(datapath,filenames[i],sep = "")
junk <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
skipno <- which(junk == "Created") - 1
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
View(dat)
# Going to put dates as Year Day (day of the year), e.g. Jan 1 = 1, etc. This is because the serial dates
# in Excel for Mac, Excel for Windows, and Matlab all use different origins and I want this script to work
# across platforms. The In Situ files have two different date formats in the data column: YYYY-MM-DD and
# MM/DD/YYYY, so going to try extracting the date from the file name or the header.
pos = regexpr('_', filenames[i])
dyr <- substr(filenames[i],pos+1,pos+4)
dmo <- substr(filenames[i],pos+6,pos+7)
dd <- substr(filenames[i],pos+9,pos+10)
newdate <- paste(dyr,dmo,dd,sep = "/")
yr0 = as.numeric(year) - 1
dat$YearDay <- as.numeric(as.Date(newdate)-as.Date(0, origin=paste(yr0,"12-31",sep = '-')))
# Rename columns with data I need so that it doesn't matter what instrument is being used
z_m <- dat[,grepl( "Depth" , names( dat ) ) ]
# Trim data so only downcast is used
maxdepi <-which.max(z_m)
dat <- dat[1:maxdepi,]
T_C <-  dat[,grepl( "Temp" , names( dat ) ) ]
T_C <- T_C[,1]
DO_ppm <-  dat[,grepl( "RDO" , names( dat ) ) ]
DO_ppm <- DO_ppm[,1]
dat1 <- cbind(dat$YearDay,z_m,T_C,DO_ppm)
View(dat1)
colnames[1](dat1)
colnames[1](dat1,'YearDay')
colnames(dat1[1],'YearDay')
colnames(dat1[1]) <- c('YearDay')
colnames[1](dat1) <- c('YearDay')
colnames[1](dat1) <- c("YearDay")
colnames(dat1)[1] <- c("YearDay")
dat1 <- cbind(dat$YearDay,z_m,T_C,DO_ppm)
colnames(dat1)[1] <- c("YearDay")
colnames(dat1)[1] <- "YearDay"
dat1 <- cbind(dat$YearDay,z_m,T_C,DO_ppm)
View(dat)
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
z_m <- z_m[1:maxdepi]
T_C <-  dat[,grepl( "Temp" , names( dat ) ) ]
T_C <- T_C[,1]
DO_ppm <-  dat[,grepl( "RDO" , names( dat ) ) ]
DO_ppm <- DO_ppm[,1]
dat1 <- cbind(dat$YearDay,z_m,T_C,DO_ppm)
View(dat1)
colnames(dat1)[1] <- "YearDay"
colnames(dat1)[1]
colnames(dat1)[1] <- "YearDay"
colnames(dat1)[c(1,)] <- "YearDay"
colnames(dat1)[c(1)] <- "YearDay"
colnames(dat1)[c(1)] <- c("YearDay")
YearDay <- dat$YearDay
dat1 <- cbind(YearDay,z_m,T_C,DO_ppm)
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
View(outfile)
View(dat1)
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
View(outfile)
outfile <- rbind(outfile, dat1, make.row.names = FALSE)
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
debugSource('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
View(dat)
View(outfile)
outfile <- date.frame(rbind(outfile, dat1))
outfile <- make.date.frame(rbind(outfile, dat1))
outfile <- data.frame()
View(outfile)
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
outfile <- data.frame("YearDay","z_m","T_C","DO_ppm")
View(outfile)
outfile <- ""
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
rownames(outfile) <- NULL
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
View(z_m)
View(dat)
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
lake <- 'North Pond'
site <- 'NPDEP1'
year <- '2020'
basefile <- paste(site,year,sep="_")
# Load data
folder <- paste("~/Documents/Research/7LA-Colby/Belgrade Lakes/Lakes/",lake,sep="","/RawData/InSitu/")
datapath <- paste(folder,year,sep = "","/")
filenames <- dir(datapath, pattern=paste(basefile,'-',sep = ""))
outfile <- ""
outfilename <- paste(datapath,paste(basefile,"_InSitu.csv",sep = ""),sep = "")
datapath2 <- paste(folder,"All/",sep= "")
outfilename2 <- paste(datapath2,paste(basefile,"_InSitu.csv",sep = ""),sep = "")
for(i in 1:length(filenames)){
fullpath <- paste(datapath,filenames[i],sep = "")
suppressWarnings({
if(str_detect(fullpath,"log") == TRUE) {
# Some In Situ files have an extra header line for GPS so we need to cut different number of header files
junk <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
skipno <- which(junk == "Created") - 1
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
} else {
junk <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
skipno <- which(junk == "Date Time") - 1
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
}
})
# Going to put dates as Year Day (day of the year), e.g. Jan 1 = 1, etc. This is because the serial dates
# in Excel for Mac, Excel for Windows, and Matlab all use different origins and I want this script to work
# across platforms. The In Situ files have two different date formats in the data column: YYYY-MM-DD and
# MM/DD/YYYY, so going to try extracting the date from the file name or the header.
pos = regexpr('_', filenames[i])
dyr <- substr(filenames[i],pos+1,pos+4)
dmo <- substr(filenames[i],pos+6,pos+7)
dd <- substr(filenames[i],pos+9,pos+10)
newdate <- paste(dyr,dmo,dd,sep = "/")
yr0 = as.numeric(year) - 1
dat$YearDay <- as.numeric(as.Date(newdate)-as.Date(0, origin=paste(yr0,"12-31",sep = '-')))
# Rename columns with data I need so that it doesn't matter what instrument is being used
z_m <- dat[,grepl( "Depth" , names( dat ) ) ]
# Trim data so only downcast is used
maxdepi <-which.max(z_m)
dat <- dat[1:maxdepi,]
z_m <- z_m[1:maxdepi]
T_C <-  dat[,grepl( "Temp" , names( dat ) ) ]
T_C <- T_C[,1]
DO_ppm <-  dat[,grepl( "RDO" , names( dat ) ) ]
DO_ppm <- DO_ppm[,1]
YearDay <- dat$YearDay
dat1 <- cbind(YearDay,z_m,T_C,DO_ppm)
outfile <- rbind(outfile, dat1)
}
View(junk)
View(junk)
junk <- read.csv(fullpath, header = TRUE, stringsAsFactors = FALSE)
fullpath
View(dat)
View(dat1)
View(outfile)
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
tail(outfile)
293/30
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
fullpath
junk <- read.csv(fullpath, header = TRUE, stringsAsFactors = FALSE)
View(junk)
skipno <- which(junk == "Date Time") - 1
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
View(dat)
# Going to put dates as Year Day (day of the year), e.g. Jan 1 = 1, etc. This is because the serial dates
# in Excel for Mac, Excel for Windows, and Matlab all use different origins and I want this script to work
# across platforms. The In Situ files have two different date formats in the data column: YYYY-MM-DD and
# MM/DD/YYYY, so going to try extracting the date from the file name or the header.
pos = regexpr('_', filenames[i])
dyr <- substr(filenames[i],pos+1,pos+4)
dmo <- substr(filenames[i],pos+6,pos+7)
dd <- substr(filenames[i],pos+9,pos+10)
newdate <- paste(dyr,dmo,dd,sep = "/")
yr0 = as.numeric(year) - 1
dat$YearDay <- as.numeric(as.Date(newdate)-as.Date(0, origin=paste(yr0,"12-31",sep = '-')))
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
library(stringr)
library(ggplot2)
dat <- read.csv(file.choose(new = FALSE), skip =  20,header = FALSE, stringsAsFactors = FALSE)
View(dat)
colnames(dat) <- c('Date','Chl-a Fluor','Turb','Depth','Temp','Act Cond','Spec Cond','Sal','Res','Dens','TDS','RDO Conc',
'RDO Sat','OPP','Temp','Pres','Depth','Chl-a Fluor','Chla.Conc','TSS','a','b','c','d','e','f')
colnames(dat) <- c('Date','Chl-a Fluor','Turb','Depth','Temp','Act Cond','Spec Cond','Sal','Res','Dens','TDS','RDO Conc',
'RDO Sat','OPP','Temp','Pres','Depth','Chl-a Fluor','Chla.Conc','TSS','a')
# Trim data so only downcast is used
maxdepi <-which.max(dat$Depth)
dat <- dat[1:maxdepi,]
ggplot()+
geom_point(data = dat, aes(x = Temp, y = Depth))
colnames(dat) <- c('Date','Chl-a Fluor','Turb','Depth','Temp','Act Cond','Spec Cond','Sal','Res','Dens','TDS','RDO Conc',
'RDO Sat','OPP','junk','Pres','Depth','junk2','Chla.Conc','TSS','a')
ggplot()+
geom_point(data = dat, aes(x = Temp, y = Depth))
ggplot()+
geom_point(data = dat, aes(x = Temp, y = Depth))
colnames(dat) <- c('Date','Chl-a Fluor','Turb','Depth','Temp','Act Cond','Spec Cond','Sal','Res','Dens','TDS','RDO Conc',
'RDO Sat','OPP','junk','Pres','junk3','junk2','Chla.Conc','TSS','a')
dat <- read.csv(file.choose(new = FALSE), skip =  20,header = FALSE, stringsAsFactors = FALSE)
colnames(dat) <- c('Date','Chl-a Fluor','Turb','Depth','Temp','Act Cond','Spec Cond','Sal','Res','Dens','TDS','RDO Conc',
'RDO Sat','OPP','junk','Pres','junk3','junk2','Chla.Conc','TSS','a')
# Trim data so only downcast is used
maxdepi <-which.max(dat$Depth)
dat <- dat[1:maxdepi,]
ggplot()+
geom_point(data = dat, aes(x = Temp, y = Depth))
ggplot()+
geom_point(data = dat, aes(x = (Temp*9/5+32), y = Depth*3.28)) +
labs(x = "Temperature (F)", y = 'Depth (ft)') +
scale_y_continuous(trans = "reverse")
ggplot()+
geom_point(data = dat, aes(x = `RDO Conc`, y = Depth*3.28)) +
labs(x = "Dissolved Oxygen (ppm)", y = 'Depth (ft)') +
scale_y_continuous(trans = "reverse")
dat <- read.csv(file.choose(new = FALSE), skip =  20,header = FALSE, stringsAsFactors = FALSE)
colnames(dat) <- c('Date','Chl-a Fluor','Turb','Depth','Temp','Act Cond','Spec Cond','Sal','Res','Dens','TDS','RDO Conc',
'RDO Sat','OPP','junk','Pres','junk3','junk2','Chla.Conc','TSS','a')
# Trim data so only downcast is used
maxdepi <-which.max(dat$Depth)
dat <- dat[1:maxdepi,]
ggplot()+
geom_point(data = dat, aes(x = (Temp*9/5+32), y = Depth*3.28)) +
labs(x = "Temperature (F)", y = 'Depth (ft)') +
scale_y_continuous(trans = "reverse")
ggplot()+
geom_point(data = dat, aes(x = `RDO Conc`, y = Depth*3.28)) +
labs(x = "Dissolved Oxygen (ppm)", y = 'Depth (ft)') +
scale_y_continuous(trans = "reverse")
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
lake <- 'Salmon'
site <- 'SPDEP1'
year <- '2020'
basefile <- paste(site,year,sep="_")
# Load data
folder <- paste("~/Documents/Research/7LA-Colby/Belgrade Lakes/Lakes/",lake,sep="","/RawData/InSitu/")
datapath <- paste(folder,year,sep = "","/")
filenames <- dir(datapath, pattern=paste(basefile,'-',sep = ""))
outfile <- ""
outfilename <- paste(datapath,paste(basefile,"_InSitu.csv",sep = ""),sep = "")
datapath2 <- paste(folder,"All/",sep= "")
outfilename2 <- paste(datapath2,paste(basefile,"_InSitu.csv",sep = ""),sep = "")
i = 1
str_detect(fullpath,"log")
fullpath <- paste(datapath,filenames[i],sep = "")
str_detect(fullpath,"log")
junk <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
skipno <- which(junk == "Created") - 1
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
View(dat)
# Going to put dates as Year Day (day of the year), e.g. Jan 1 = 1, etc. This is because the serial dates
# in Excel for Mac, Excel for Windows, and Matlab all use different origins and I want this script to work
# across platforms. The In Situ files have two different date formats in the data column: YYYY-MM-DD and
# MM/DD/YYYY, so going to try extracting the date from the file name or the header.
pos = regexpr('_', filenames[i])
dyr <- substr(filenames[i],pos+1,pos+4)
dmo <- substr(filenames[i],pos+6,pos+7)
dd <- substr(filenames[i],pos+9,pos+10)
newdate <- paste(dyr,dmo,dd,sep = "/")
yr0 = as.numeric(year) - 1
dat$YearDay <- as.numeric(as.Date(newdate)-as.Date(0, origin=paste(yr0,"12-31",sep = '-')))
# Rename columns with data I need so that it doesn't matter what instrument is being used
z_m <- dat[,grepl( "Depth" , names( dat ) ) ]
# Trim data so only downcast is used
maxdepi <-which.max(z_m)
dat <- dat[1:maxdepi,]
z_m <- z_m[1:maxdepi]
T_C <-  dat[,grepl( "Temp" , names( dat ) ) ]
T_C <- T_C[,1]
DO_ppm <-  dat[,grepl( "RDO" , names( dat ) ) ]
DO_ppm <- DO_ppm[,1]
YearDay <- dat$YearDay
dat1 <- cbind(YearDay,z_m,T_C,DO_ppm)
outfile <- rbind(outfile, dat1)
for(i in 1:length(filenames)){
fullpath <- paste(datapath,filenames[i],sep = "")
suppressWarnings({
if(str_detect(fullpath,"log") == TRUE) {
# Some In Situ files have an extra header line for GPS so we need to cut different number of header files
junk <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
skipno <- which(junk == "Created") - 1
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
} else {
junk <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
skipno <- which(junk == "Date Time") - 1
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
}
})
# Going to put dates as Year Day (day of the year), e.g. Jan 1 = 1, etc. This is because the serial dates
# in Excel for Mac, Excel for Windows, and Matlab all use different origins and I want this script to work
# across platforms. The In Situ files have two different date formats in the data column: YYYY-MM-DD and
# MM/DD/YYYY, so going to try extracting the date from the file name or the header.
pos = regexpr('_', filenames[i])
dyr <- substr(filenames[i],pos+1,pos+4)
dmo <- substr(filenames[i],pos+6,pos+7)
dd <- substr(filenames[i],pos+9,pos+10)
newdate <- paste(dyr,dmo,dd,sep = "/")
yr0 = as.numeric(year) - 1
dat$YearDay <- as.numeric(as.Date(newdate)-as.Date(0, origin=paste(yr0,"12-31",sep = '-')))
# Rename columns with data I need so that it doesn't matter what instrument is being used
z_m <- dat[,grepl( "Depth" , names( dat ) ) ]
# Trim data so only downcast is used
maxdepi <-which.max(z_m)
dat <- dat[1:maxdepi,]
z_m <- z_m[1:maxdepi]
T_C <-  dat[,grepl( "Temp" , names( dat ) ) ]
T_C <- T_C[,1]
DO_ppm <-  dat[,grepl( "RDO" , names( dat ) ) ]
DO_ppm <- DO_ppm[,1]
YearDay <- dat$YearDay
dat1 <- cbind(YearDay,z_m,T_C,DO_ppm)
outfile <- rbind(outfile, dat1)
}
junk <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
View(junk)
skipno <- which(junk == "Date Time") - 1
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
skipno <-18
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files.R')
source('~/Dropbox (Personal)/My Mac (ens-help’s MacBook Pro)/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files_AT500.R')
source('~/Dropbox (Personal)/My Mac (ens-help’s MacBook Pro)/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files_AT500.R')
source('~/Dropbox (Personal)/My Mac (ens-help’s MacBook Pro)/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files_AT500.R')
selectDirectory
library(rstudioapi)
selectDirectory
rchoose.dir()
selectDirectory()
# Select folder where data is
datapath <- selectDirectory()
filenames <- dir(datapath)
# Get list of files
filenames <- dir(datapath)
# Create output file
basefile <- paste(site,year,sep="_")
outfile <- ""
outfilename <- paste(datapath,paste(basefile,"_InSitu.csv",sep = ""),sep = "")
i = 1
fullpath <- paste(datapath,filenames[i],sep = "")
fullpath
junk <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
datapath
fullpath <- paste(datapath,filenames[i],sep = "/")
fullpath
junk <- read.csv(fullpath, header = FALSE, stringsAsFactors = FALSE)
View(junk)
skipno <- which(junk == "Date Time") - 1
# Read in the data
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
View(dat)
dat %>% clean_names()
install.packages("janitor")
library(janitor)
dat %>% clean_names()
# Read in the data
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
dat <- dat %>% clean_names()
names(dat) <- abbreviate(names(dat), minlength=3)
# Read in the data
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
dat <- dat %>% clean_names()
# Read in the data
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
names(dat) <- abbreviate(names(dat), minlength=3)
# Read in the data
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
dat <- dat %>% clean_names()
# Read in the data
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
names(dat) <- abbreviate(names(dat), minlength=3)
dat <- dat %>% clean_names()
# Read in the data
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
# Read in the data
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
dat <- dat %>% clean_names()
names(dat) <- abbreviate(names(dat), minlength=3)
# Read in the data
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
names(dat) <- abbreviate(names(dat), minlength=3)
dat <- dat %>% clean_names()
# Add a Year Day column for compatibility across platforms
yr0 = as.numeric(year) - 1
dat$YearDay <- as.numeric(as.Date(date$d_t)-as.Date(0, origin=paste(yr0,"12-31",sep = '-')))
dat$YearDay <- as.numeric(as.Date(dat$d_t)-as.Date(0, origin=paste(yr0,"12-31",sep = '-')))
library(lubridate)
as.Date(dat$d_t)
as.Date(dat$d_t,"%m/%d/%y")
dat$YearDay <- as.numeric(as.Date(dat$d_t,"%m/%d/%y")-as.Date(0, origin=paste(yr0,"12-31",sep = '-')))
# Read in the data and clean up the column names
dat <- read.csv(fullpath, skip = skipno, header = TRUE, stringsAsFactors = FALSE)
# The serial numbers (specific to each probe) are part of the column names.
# To combine, we need to rename them.
z_m <- dat[,grepl( "Depth" , names( dat ) ) ]
lat <- dat[,grepl( "Latitude" , names( dat ) ) ]
T_C <-  dat[,grepl( "Temp" , names( dat ) ) ]
View(T_C)
T_C <-  dat[,grepl( "Temperature...C...754" , names( dat ) ) ]
dat2$YearDay <- as.numeric(as.Date(dat$d_t,"%m/%d/%y")-as.Date(0, origin=paste(yr0,"12-31",sep = '-')))
dat2 <-""
# Add a Year Day column for compatibility across platforms
yr0 = as.numeric(year) - 1
dat2$YearDay <- as.numeric(as.Date(dat$d_t,"%m/%d/%y")-as.Date(0, origin=paste(yr0,"12-31",sep = '-')))
source('~/Dropbox (Personal)/My Mac (ens-help’s MacBook Pro)/Documents/GitHub/7LA-Colby-WQI/InSitu-R/combine_InSitu_files_AT500.R')
